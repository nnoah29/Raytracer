        -:    0:Source:/home/nnoah/_WORKS/SCHooL_/RAYTRACER_/src/base/primitives/Sphere.hpp
        -:    0:Graph:/home/nnoah/_WORKS/SCHooL_/RAYTRACER_/cmake-build-debug-coverage/CMakeFiles/raytracer.dir/utilitaires/utilitaires.cpp.gcno
        -:    0:Data:/home/nnoah/_WORKS/SCHooL_/RAYTRACER_/cmake-build-debug-coverage/CMakeFiles/raytracer.dir/utilitaires/utilitaires.cpp.gcda
        -:    0:Runs:1
        -:    1:/*
        -:    2:**  _                                              _      ___    ___  
        -:    3:** | |                                            | |    |__ \  / _ \
        -:    4:** | |_Created _       _ __   _ __    ___    __ _ | |__     ) || (_) |
        -:    5:** | '_ \ | | | |     | '_ \ | '_ \  / _ \  / _` || '_ \   / /  \__, |
        -:    6:** | |_) || |_| |     | | | || | | || (_) || (_| || | | | / /_    / / 
        -:    7:** |_.__/  \__, |     |_| |_||_| |_| \___/  \__,_||_| |_||____|  /_/ 
        -:    8:**          __/ |     on 27/04/25.                                          
        -:    9:**         |___/ 
        -:   10:*/
        -:   11:
        -:   12:#ifndef SPHERE_HPP
        -:   13:#define SPHERE_HPP
        -:   14:#include <iostream>
        -:   15:
        -:   16:#include "APrimitive.hpp"
        -:   17:
        -:   18:
        -:   19:class Sphere final : public APrimitive {
        -:   20:
        -:   21:    public:
function _ZN6SphereC2ER13dataPrimitiveRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   22:    Sphere(dataPrimitive& data, const std::string& name): APrimitive(data, name){}
    %%%%%:   22-block 2
appel   0 jamais exécuté
        -:   23:
function _ZNK6Sphere3hitERK3RayffR13PointOfImpact called 0 returned 0% blocks executed 0%
    #####:   24:    bool hit(const Ray& ray, float t_min, float t_max, PointOfImpact& p) const override
        -:   25:    {
    #####:   26:        const Point oc = data.position - ray.origin();
    %%%%%:   26-block 2
appel   0 jamais exécuté
appel   1 jamais exécuté
    #####:   27:        const auto a = ray.direction().lengthSquared();
appel   0 jamais exécuté
appel   1 jamais exécuté
    #####:   28:        const auto b = dot(ray.direction(), oc);
appel   0 jamais exécuté
appel   1 jamais exécuté
branchement  2 jamais exécuté (fallthrough)
branchement  3 jamais exécuté (throw)
    #####:   29:        const auto c = oc.lengthSquared() - data.radius * data.radius;
    %%%%%:   29-block 8
appel   0 jamais exécuté
        -:   30:
    #####:   31:        const auto discriminant = b * b - a * c;
    #####:   32:        if (discriminant < 0) {
branchement  0 jamais exécuté (fallthrough)
branchement  1 jamais exécuté
    #####:   33:            return false;
    %%%%%:   33-block 10
        -:   34:        }
        -:   35:
    #####:   36:        const auto sqrt_discriminant = std::sqrt(discriminant);
    %%%%%:   36-block 11
appel   0 jamais exécuté
        -:   37:
    #####:   38:        auto root = (b - sqrt_discriminant) / a;
    #####:   39:        if (!surrounds(t_min, root, t_max)) {
appel   0 jamais exécuté
branchement  1 jamais exécuté (fallthrough)
branchement  2 jamais exécuté (throw)
    %%%%%:   39-block 13
branchement  3 jamais exécuté (fallthrough)
branchement  4 jamais exécuté
    #####:   40:            root = (b + sqrt_discriminant) / a;
    #####:   41:            if (!surrounds(t_min, root, t_max))
    %%%%%:   41-block 14
appel   0 jamais exécuté
branchement  1 jamais exécuté (fallthrough)
branchement  2 jamais exécuté (throw)
    %%%%%:   41-block 15
branchement  3 jamais exécuté (fallthrough)
branchement  4 jamais exécuté
    #####:   42:                return false;
    %%%%%:   42-block 16
        -:   43:        }
        -:   44:
    #####:   45:        p.t = root;
    #####:   46:        p.p = ray.at(p.t);
    %%%%%:   46-block 17
appel   0 jamais exécuté
    #####:   47:        const Vecteur out_normal = (p.p - data.position) / data.radius;
appel   0 jamais exécuté
appel   1 jamais exécuté
branchement  2 jamais exécuté (fallthrough)
branchement  3 jamais exécuté (throw)
    $$$$$:   47-block 24
    #####:   48:        p.set_face_normal(ray, out_normal);
    %%%%%:   48-block 20
appel   0 jamais exécuté
    #####:   49:        p.material = data.material;
    #####:   50:        return true;
        -:   51:    }
        -:   52:};
        -:   53:
        -:   54:
        -:   55:
        -:   56:#endif //SPHERE_HPP
