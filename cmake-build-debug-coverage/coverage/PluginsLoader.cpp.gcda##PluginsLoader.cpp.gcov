        -:    0:Source:/home/nnoah/_WORKS/SCHooL_/RAYTRACER_/src/PluginsLoader.cpp
        -:    0:Graph:/home/nnoah/_WORKS/SCHooL_/RAYTRACER_/cmake-build-debug-coverage/CMakeFiles/raytracer.dir/src/PluginsLoader.cpp.gcno
        -:    0:Data:/home/nnoah/_WORKS/SCHooL_/RAYTRACER_/cmake-build-debug-coverage/CMakeFiles/raytracer.dir/src/PluginsLoader.cpp.gcda
        -:    0:Runs:1
        -:    1:/*
        -:    2:**  _                                              _      ___    ___  
        -:    3:** | |                                            | |    |__ \  / _ \
        -:    4:** | |_Created _       _ __   _ __    ___    __ _ | |__     ) || (_) |
        -:    5:** | '_ \ | | | |     | '_ \ | '_ \  / _ \  / _` || '_ \   / /  \__, |
        -:    6:** | |_) || |_| |     | | | || | | || (_) || (_| || | | | / /_    / / 
        -:    7:** |_.__/  \__, |     |_| |_||_| |_| \___/  \__,_||_| |_||____|  /_/ 
        -:    8:**          __/ |     on 28/04/25.                                          
        -:    9:**         |___/ 
        -:   10:*/
        -:   11:
        -:   12:#include "PluginsLoader.hpp"
        -:   13:
function _ZN13PluginsLoaderC2EPPcP7Factory called 1 returned 100% blocks executed 34%
        1:   14:PluginsLoader::PluginsLoader(char *argv[], Factory* f) {
        1:   14-block 2
appel   0 a retourné 1
        1:   15:    _factory = f;
        1:   16:    int pos = -1;
        3:   17:    for (int i = 0; argv[i] != nullptr; i++)
        2:   17-block 12
        3:   17-block 13
branchement  0 pris 2
branchement  1 pris 1 (fallthrough)
       4*:   18:        if (std::string(argv[i]) == "-p") pos = i + 1;
        2:   18-block 6
appel   0 a retourné 2
branchement  1 pris 2 (fallthrough)
branchement  2 pris 0 (throw)
        2:   18-block 7
appel   3 a retourné 2
branchement  4 pris 2 (fallthrough)
branchement  5 pris 0 (throw)
        2:   18-block 8
appel   6 a retourné 2
        2:   18-block 10
branchement  7 pris 0 (fallthrough)
branchement  8 pris 2
    %%%%%:   18-block 11
    $$$$$:   18-block 30
appel   9 jamais exécuté
    $$$$$:   18-block 34
    $$$$$:   18-block 35
        1:   19:    if (pos == -1) return;
        1:   19-block 14
branchement  0 pris 1 (fallthrough)
branchement  1 pris 0
        1:   19-block 15
    #####:   20:    if (argv[pos] == nullptr) throw std::runtime_error("No Plugins Found");
    %%%%%:   20-block 16
branchement  0 jamais exécuté (fallthrough)
branchement  1 jamais exécuté
    %%%%%:   20-block 17
appel   2 jamais exécuté
appel   3 jamais exécuté
branchement  4 jamais exécuté (fallthrough)
branchement  5 jamais exécuté (throw)
    %%%%%:   20-block 19
appel   6 jamais exécuté
    $$$$$:   20-block 36
appel   7 jamais exécuté
    #####:   21:    for (int i = pos; argv[i] != nullptr; i++) {
    %%%%%:   21-block 20
    %%%%%:   21-block 28
branchement  0 jamais exécuté
branchement  1 jamais exécuté (fallthrough)
    #####:   22:        load(argv[i], f);
    %%%%%:   22-block 23
appel   0 jamais exécuté
branchement  1 jamais exécuté (fallthrough)
branchement  2 jamais exécuté (throw)
    %%%%%:   22-block 24
appel   3 jamais exécuté
branchement  4 jamais exécuté (fallthrough)
branchement  5 jamais exécuté (throw)
    %%%%%:   22-block 25
appel   6 jamais exécuté
    %%%%%:   22-block 27
    $$$$$:   22-block 38
appel   7 jamais exécuté
    $$$$$:   22-block 42
    $$$$$:   22-block 43
        -:   23:    }
    =====:   24:}
    $$$$$:   24-block 44
appel   0 jamais exécuté
        -:   25:
function _ZN13PluginsLoaderD2Ev called 0 returned 0% blocks executed 0%
    #####:   26:PluginsLoader::~PluginsLoader() {
    #####:   27:    _factory->unregisterPrimitive();
    %%%%%:   27-block 2
appel   0 jamais exécuté
    #####:   28:    for (void* handle : _handles) {
appel   0 jamais exécuté
appel   1 jamais exécuté
    %%%%%:   28-block 18
branchement  2 jamais exécuté
branchement  3 jamais exécuté (fallthrough)
    #####:   29:        if (handle) {
    %%%%%:   29-block 7
branchement  0 jamais exécuté (fallthrough)
branchement  1 jamais exécuté
    #####:   30:            dlclose(handle);
    %%%%%:   30-block 8
appel   0 jamais exécuté
        -:   31:        }
        -:   32:    }
    #####:   33:}
    %%%%%:   33-block 19
appel   0 jamais exécuté
        -:   34:
function _ZN13PluginsLoader4loadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP7Factory called 0 returned 0% blocks executed 0%
    #####:   35:void PluginsLoader::load(const std::string& path, Factory* factory)
        -:   36:{
    #####:   37:    if (!std::filesystem::exists(path)) throw std::runtime_error("No Plugins Found");
    %%%%%:   37-block 2
appel   0 jamais exécuté
branchement  1 jamais exécuté (fallthrough)
branchement  2 jamais exécuté (throw)
    %%%%%:   37-block 3
appel   3 jamais exécuté
branchement  4 jamais exécuté (fallthrough)
branchement  5 jamais exécuté (throw)
    %%%%%:   37-block 4
appel   6 jamais exécuté
branchement  7 jamais exécuté (fallthrough)
branchement  8 jamais exécuté
    %%%%%:   37-block 6
appel   9 jamais exécuté
appel  10 jamais exécuté
branchement 11 jamais exécuté (fallthrough)
branchement 12 jamais exécuté (throw)
    %%%%%:   37-block 8
appel  13 jamais exécuté
    $$$$$:   37-block 28
appel  14 jamais exécuté
    $$$$$:   37-block 30
    $$$$$:   37-block 31
appel  15 jamais exécuté
    #####:   38:    void* handle = dlopen(path.c_str(), RTLD_LAZY);
    %%%%%:   38-block 9
appel   0 jamais exécuté
appel   1 jamais exécuté
    #####:   39:    if (!handle)
branchement  0 jamais exécuté (fallthrough)
branchement  1 jamais exécuté
    #####:   40:        throw std::runtime_error("❌ Failed to load plugin: " + path);
    %%%%%:   40-block 12
appel   0 jamais exécuté
appel   1 jamais exécuté
branchement  2 jamais exécuté (fallthrough)
branchement  3 jamais exécuté (throw)
    %%%%%:   40-block 14
appel   4 jamais exécuté
branchement  5 jamais exécuté (fallthrough)
branchement  6 jamais exécuté (throw)
    %%%%%:   40-block 15
appel   7 jamais exécuté
appel   8 jamais exécuté
    $$$$$:   40-block 33
appel   9 jamais exécuté
    $$$$$:   40-block 35
    $$$$$:   40-block 36
appel  10 jamais exécuté
        -:   41:
    #####:   42:    const auto registerFunc = reinterpret_cast<PluginRegisterFunc>(dlsym(handle, "RegisterPlugin"));
    %%%%%:   42-block 17
appel   0 jamais exécuté
    #####:   43:    if (!registerFunc) {
branchement  0 jamais exécuté (fallthrough)
branchement  1 jamais exécuté
    #####:   44:        dlclose(handle);
    %%%%%:   44-block 19
appel   0 jamais exécuté
    #####:   45:        throw std::runtime_error("❌ Symbol 'RegisterPlugin' not found in plugin: " + path);
appel   0 jamais exécuté
appel   1 jamais exécuté
branchement  2 jamais exécuté (fallthrough)
branchement  3 jamais exécuté (throw)
    %%%%%:   45-block 22
appel   4 jamais exécuté
branchement  5 jamais exécuté (fallthrough)
branchement  6 jamais exécuté (throw)
    %%%%%:   45-block 23
appel   7 jamais exécuté
appel   8 jamais exécuté
    $$$$$:   45-block 38
appel   9 jamais exécuté
    $$$$$:   45-block 40
    $$$$$:   45-block 41
appel  10 jamais exécuté
        -:   46:    }
        -:   47:
        -:   48:    // Appeler le plugin pour qu'il s'enregistre lui-même dans la factory
    #####:   49:    registerFunc(factory);
    %%%%%:   49-block 25
appel   0 jamais exécuté
branchement  1 jamais exécuté (fallthrough)
branchement  2 jamais exécuté (throw)
    #####:   50:    _handles.push_back(handle);
    %%%%%:   50-block 26
appel   0 jamais exécuté
branchement  1 jamais exécuté (fallthrough)
branchement  2 jamais exécuté (throw)
    #####:   51:}
    %%%%%:   51-block 27
