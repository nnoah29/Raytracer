        -:    0:Source:/home/nnoah/_WORKS/SCHooL_/RAYTRACER_/includes/Vecteur.hpp
        -:    0:Graph:/home/nnoah/_WORKS/SCHooL_/RAYTRACER_/cmake-build-debug-coverage/CMakeFiles/raytracer.dir/src/base/primitives/Plane.cpp.gcno
        -:    0:Data:/home/nnoah/_WORKS/SCHooL_/RAYTRACER_/cmake-build-debug-coverage/CMakeFiles/raytracer.dir/src/base/primitives/Plane.cpp.gcda
        -:    0:Runs:1
        -:    1:/*
        -:    2:**  _                                              _      ___    ___  
        -:    3:** | |                                            | |    |__ \  / _ \
        -:    4:** | |_Created _       _ __   _ __    ___    __ _ | |__     ) || (_) |
        -:    5:** | '_ \ | | | |     | '_ \ | '_ \  / _ \  / _` || '_ \   / /  \__, |
        -:    6:** | |_) || |_| |     | | | || | | || (_) || (_| || | | | / /_    / / 
        -:    7:** |_.__/  \__, |     |_| |_||_| |_| \___/  \__,_||_| |_||____|  /_/ 
        -:    8:**          __/ |     on 24/04/25.                                          
        -:    9:**         |___/ 
        -:   10:*/
        -:   11:
        -:   12:#ifndef VECTEUR_HPP
        -:   13:#define VECTEUR_HPP
        -:   14:#include <cmath>
        -:   15:
        -:   16:
        -:   17:
        -:   18:class Vecteur {
        -:   19:public:
        -:   20:    float x, y, z;
        -:   21:
        -:   22:    Vecteur() : x(0), y(0), z(0) {}
function _ZN7VecteurC2Efff called 0 returned 0% blocks executed 0%
    #####:   23:    Vecteur(float x, float y, float z) : x(x), y(y), z(z) {}
        -:   24:
        -:   25:    // Opérateurs usuels
function _ZNK7VecteurplERKS_ called 0 returned 0% blocks executed 0%
    #####:   26:    Vecteur operator+(const Vecteur& v) const { return {x + v.x, y + v.y, z + v.z}; }
    %%%%%:   26-block 2
appel   0 jamais exécuté
    %%%%%:   26-block 4
function _ZNK7VecteurmiERKS_ called 0 returned 0% blocks executed 0%
    #####:   27:    Vecteur operator-(const Vecteur& v) const { return {x - v.x, y - v.y, z - v.z}; }
    %%%%%:   27-block 2
appel   0 jamais exécuté
    %%%%%:   27-block 4
function _ZNK7VecteurmlEf called 0 returned 0% blocks executed 0%
    #####:   28:    Vecteur operator*(float scalar) const { return {x * scalar, y * scalar, z * scalar}; }
    %%%%%:   28-block 2
appel   0 jamais exécuté
    %%%%%:   28-block 4
function _ZNK7VecteurngEv called 0 returned 0% blocks executed 0%
    #####:   29:    Vecteur operator-() const { return {-x, -y, -z}; }
    %%%%%:   29-block 2
appel   0 jamais exécuté
    %%%%%:   29-block 4
        -:   30:
function _ZNK7Vecteur3dotERKS_ called 0 returned 0% blocks executed 0%
    #####:   31:    float dot(const Vecteur& v) const { return x * v.x + y * v.y + z * v.z; }
    %%%%%:   31-block 2
        -:   32:
        -:   33:    static float dot(const Vecteur& v1, const Vecteur& v2) {
        -:   34:        return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;
        -:   35:    }
        -:   36:
function _ZNK7Vecteur10normalizedEv called 0 returned 0% blocks executed 0%
    #####:   37:    Vecteur normalized() const {
    #####:   38:        const float len = std::sqrt(x * x + y * y + z * z);
    %%%%%:   38-block 2
appel   0 jamais exécuté
    #####:   39:        return (len > 0) ? (*this * (1.0f / len)) : Vecteur(0, 0, 0);
branchement  0 jamais exécuté (fallthrough)
branchement  1 jamais exécuté
    %%%%%:   39-block 4
appel   2 jamais exécuté
    %%%%%:   39-block 5
appel   3 jamais exécuté
    %%%%%:   39-block 6
        -:   40:    }
        -:   41:
        -:   42:    float lengthSquared() const {
        -:   43:        return x * x + y * y + z * z;
        -:   44:    }
        -:   45:
        -:   46:    float length() const {
        -:   47:        return std::sqrt(lengthSquared());
        -:   48:    }
        -:   49:
        -:   50:
        -:   51:};
        -:   52:
        -:   53:using Point = Vecteur;
        -:   54:
        -:   55:
        -:   56:#endif //VECTEUR_HPP
